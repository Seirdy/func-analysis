[build-system]
requires = ['setuptools>=38.6.0', 'wheel>0.31.0']

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py37

[testenv]
whitelist_externals = sh
deps =
	pytest>=4.0.1
	coverage
	pytest-cov
	numpy
	scipy
	mpmath
	pandas
commands =
	pytest

[testenv:format]
basepython = python3
skip_install = true
deps =
	black
	isort
commands =
	sh -c "isort --multi-line=3 --trailing-comma --line-width=79 *.py"
	black --py36 -l 79 .

# Linters

[testenv:flake8]
basepython = python3
skip_install = true
deps =
	flake8
	pep8-naming
	flake8-bandit
	flake8-blind-except
	flake8-builtins
	flake8-comprehensions
	flake8-deprecated
	flake8-eradicate
	flake8-mutable
	flake8-pep3101
	flake8-polyfill
	flake8-pytest
	flake8-self
	flake8-super-call
	flake8-tuple
commands =
	flake8

[testenv:pylint]
basepython = python3
skip_install = true
deps =
	pylint
	numpy
	scipy
	mpmath
	pandas
commands =
	sh -c "pylint -s n *.py"

[testenv:pydocstyle]
basepython = python3
skip_install = true
deps = pydocstyle
commands = pydocstyle

[testenv:mypy]
basepython = python3
skip_install = true
deps = mypy
commands =
	sh -c "mypy *.py"

[testenv:pyroma]
basepython = python3
skip_install = true
deps = pyroma
commands =
	pyroma -n 10 .

[testenv:linters]
basepython = python3
skip_install = true
deps =
	{[testenv:format]deps}
	{[testenv:flake8]deps}
	{[testenv:pylint]deps}
	{[testenv:pydocstyle]deps}
	{[testenv:mypy]deps}
	{[testenv:pyroma]deps}
commands =
	{[testenv:format]commands}
	{[testenv:flake8]commands}
	{[testenv:pylint]commands}
	{[testenv:pydocstyle]commands}
	{[testenv:mypy]commands}
	{[testenv:pyroma]commands}

[testenv:build]
basepython = python3
skip_install = true
deps =
	wheel
	setuptools
commands =
	python setup.py -q sdist bdist_wheel

# My poor lappie is running low on disk space, partly because of all
# my venvs. In an act of mercy, I have chosen to create a testenv to do
# everything so I only need to download one set of dependencies.
# It seems easier than getting tox to share deps. This is only useful
# on local machines, and isn't used in CI/CD.
[testenv:all]
basepython = python3
skip_install = true
deps =
	{[testenv:linters]deps}
	{[testenv]deps}
	{[testenv:build]deps}
commands =
	{[testenv:linters]commands}
	{[testenv]commands}
	{[testenv:build]commands}
"""

[tool.isort]
multi_line_output=3
include_trailing_comma=true
force_grid_wrap=0
use_parentheses=true
line_length=79
known_future_library="annotations"


[tool.black]
line-length = 79
py36 = true
quiet = true
