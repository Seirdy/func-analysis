[aliases]
test=pytest

[isort]
multi_line_output=3
include_trailing_comma=True
force_grid_wrap=0
use_parentheses=True
line_length=79
known_future_library=annotations
known_standard_library = collections, functools, numbers, typing
known_third_party = numpy, scipy, mpmath

[mypy]
python_version = 3.7
platform = linux
show_column_numbers = False
ignore_missing_imports = True
follow_imports = normal
check_untyped_defs = True
disallow_untyped_defs = False
disallow_incomplete_defs = False
strict_optional = True
follow_imports_for_stubs = True

[mypy-func_analysis]
disallow_untyped_defs = False

# Since this code uses the Black formatter, some flake8 errors should be
# ignored, notably the non-pep8 compliant W503 and E203 as described by Black's
# README. Black also inserts empty lines after docstrings if an inner function
# starts immediately after, so D202 is ignored. Black's auto-management of
# trailing commas and quotes make related errors either redundant or wrong.
# I have nothing against nested functions and "magic numbers", so Z430 and Z432
# are disabled. The rest of the errors are ignored only temporarily, and I plan
# to comply to them soon.
[flake8]
ignore =
    W503,E203,D202,C,Q,
    Z432,Z430,
    Z440,Z202,Z118,Z100
max-line-length = 79
exclude =
    .git,
    __pycache__,
    build,
    dist,
    func_analysis/tests/__init__.py
# tests can obviously use assert statements.
# setup.py man do an inner import of pytest.
per_file_ignores =
    func_analysis/tests/*py: S101
    setup.py: Z435
max-complexity = 5
max-line-complexity = 16

[pydocstyle]
add_select = D404, D212
add_ignore = D202, D104
convention = numpy

[coverage:run]
include =
    func_analysis/*.py,
    func_analysis/tests/*.py

[coverage:report]
fail_under = 70
show_missing = true

[tool:pytest]
norecursedirs =
    .vscode
    .mypy_cache
    .git
    __pycache__
    numpy-stubs
    build
    dist
filterwarnings =
    ignore::DeprecationWarning:pandas
    ignore::DeprecationWarning:isort
addopts =
    -s
    --cov
    --ignore=.eggs
    --cov-report xml:coverage.xml
    --cov-report term

