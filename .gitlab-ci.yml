stages:
  - test
  - build

image: python:alpine

before_script:
  - pip install tox

pytest:
  stage: test
  image: python:slim
  script:
    - tox -e py37
  artifacts:
    paths:
      - coverage.xml
  except:
    refs:
      - master

pytest-cov:
  stage: test
  image: python:latest  # Need curl and git
  script:
    - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
    - chmod +x ./cc-test-reporter
    - ./cc-test-reporter before-build
    - tox -e py37
  after_script:
    - ./cc-test-reporter format-coverage -t coverage.py
    - ./cc-test-reporter upload-coverage
  only:
    refs:
      - master
  artifacts:
    paths:
      - coverage.xml

# Some linters are hella slow, so they get their own pipelines.
linting 1/4:
  stage: test
  script:
    - tox -e pydocstyle,pyroma,xenon

linting 2/4:
  stage: test
  image: python:slim
  script:
    - tox -e mypy

linting 3/4:
  stage: test
  image: python:slim
  script:
    - tox -e flake8

linting 4/4:
  stage: test
  script:
    - tox -e pylint

build-test:
  stage: build
  script: tox -e build
  except:
    refs:
    - master

build-staging:
  stage: build
  script: tox -e build
  artifacts:
    paths:
      - dist/
    expire_in: 1 month
  only:
    refs:
      - master
  except:
    - tags

build-release:
  stage: build
  script: tox -e build
  artifacts:
    paths:
      - dist/
  only:
    - tags

deps-report:
  stage: build
  before_script:
    - pip install requires.io
  script:
    - requires.io update-branch -t $REQUIRESIO_TOKEN -r func-analysis -n MASTER .
  only:
    refs:
      - master

deps-report-tag:
  stage: build
  before_script:
    - pip install requires.io
  script:
    - requires.io update-tag -t $REQUIRESIO_TOKEN -r func-analysis -n $CI_COMMIT_TAG .
  only:
    - tags
