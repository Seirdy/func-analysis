image: python:3-slim

stages:
  - test
  - build

before_script:
  - pip install tox

pytest:
  stage: test
  script:
    - tox -e py37
  artifacts:
    paths:
      - coverage.xml
  except:
    refs:
      - master
      - ci-upgrades-post0.1.1

pytest-cov:
  stage: test
  variables:
    CC_TEST_REPORTER_ID: $CC_TEST_REPORTER_ID
  script:
    - apt-get --quiet update -y
    - apt-get --quiet install -y curl git
    - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
    - chmod +x ./cc-test-reporter
    - ./cc-test-reporter before-build
    - tox -e py37
  after_script:
    - ./cc-test-reporter format-coverage -t coverage.py
    - ./cc-test-reporter upload-coverage -r $CC_TEST_REPORTER_ID
  only:
    refs:
      - master
      - ci-upgrades-post0.1.1
  artifacts:
    paths:
      - coverage.xml

# Pylint is hella slow, so it gets its own pipeline.
linting 1/4:
  stage: test
  image: python:alpine
  script:
    - tox -e pydocstyle,pyroma

linting 2/4:
  stage: test
  image: python:3-slim
  script:
    - tox -e mypy

linting 3/4:
  stage: test
  image: python:3-slim
  script:
    tox -e flake8

linting 4/4:
  stage: test
  image: python:alpine
  script:
    - tox -e pylint

build-test:
  stage: build
  image: python:alpine
  script: tox -e build
  except:
    refs:
    - master

build-staging:
  stage: build
  image: python:alpine
  script: tox -e build
  artifacts:
    paths:
      - dist/
    expire_in: 1 month
  only:
    refs:
      - master
  except:
    - tags

build-release:
  stage: build
  image: python:alpine
  script: tox -e build
  artifacts:
    paths:
      - dist/
  only:
    - tags
